{"version":3,"sources":["components/Navbar/index.js","components/SearchForm/index.js","components/SearchResults/index.js","components/Conditions/index.js","components/Card/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","Searchbar","props","useState","searchValue","setSearch","type","placeholder","value","onChange","event","target","onClick","callWeatherAPI","disabled","SearchResults","Conditions","classes","Wrapper","error","Small","loading","Loader","response","data","name","alt","src","weather","icon","Math","round","main","temp","description","feels_like","humidity","pressure","wind","speed","temp_max","temp_min","Card","Footer","App","setResponse","UVresponse","setUVResponse","query","axios","get","then","res","console","log","getUVindex","coord","lat","lon","UVINDEX","useEffect","moment","format","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dae5863c.chunk.js","sourcesContent":["import React from \"react\";\n\n\n\nexport default function Navbar(){\n    return (\n        <nav className=\"navbar\"></nav>\n    )\n}\n","import React, { useState } from \"react\";\nimport \"./style.css\";\n\n\n\nexport default function Searchbar(props) {\n\n    const [searchValue, setSearch] = useState(\"\");\n\n    function HandleChange(event) {\n        setSearch(event.target.value);\n    };\n    \n\n    return ( \n        <div className = \"maincontainer\" >\n        <div className = \"card-header\">\n        \n        <h2 className=\"citysearch\"> Search for a city </h2> \n        </div> \n        <input className = \"searchbar\"\n        type = \"text\"\n        placeholder = \"Enter City Name\"\n        value = {searchValue}\n        onChange = {HandleChange}\n        />\n        <button onClick={() => props.callWeatherAPI(searchValue)} className = \"searchbtn\" disabled={searchValue === null}>Search</button>\n        </div>\n    );\n};","import React from \"react\";\n\n\n function SearchResults(props) {\n\n    return  <div>\n        <ul className=\"list- group search-results\">\n        </ul>\n        </div>\n    \n    }\nexport default SearchResults;","import React from \"react\";\nimport classes from \"./style.css\";\n\n\nconst Conditions = (props) => {\n    return (\n        <div className={classes.Wrapper}>\n            {props.error && (\n            <small className={classes.Small}>Please enter a valid city.</small>\n            )}\n           {props.loading && <div className={classes.Loader} />}\n           {props.response ? <div>\n                   <div>\n                       <h2>{props.response.data?.name} {\"\"}</h2>\n                    </div>\n                    <br />\n                    <img className=\"img\"\n                        alt=\"weather icon\"\n                        src={`http://openweathermap.org/img/w/${props.response.data?.weather[0].icon}.png`}/>\n                   <p>\n                        It is currently {Math.round(props.response.data?.main.temp)}° degrees outside with, {props.response.data?.weather[0].description} <br />\n                        and it feels like {Math.round(props.response.data?.main.feels_like)}° degrees.                    \n                    </p>\n                    <p>\n                        There is a Humidity reading of {props.response.data?.main.humidity}%. \n                    </p>\n                    <p>\n                        The atmospheric pressure reads {props.response.data?.main.pressure} kPa.\n                    </p>\n                   <p>\n                       The current Wind Speed is {props.response.data?.wind.speed} mph.\n                    </p>\n                    <p>\n                        The high temperature will be {Math.round(props.response.data?.main.temp_max)}° degrees, <br />\n                        with a low temperature {Math.round(props.response.data?.main.temp_min)}° degrees.\n                    </p>\n                    {/* <p>\n                        Today's UV Index is: \n                        {props.response.data?.UVresponse}\n                        </p>  */}\n                    \n               </div>\n           : \"There is no Weather Data\"}\n            \n        </div>\n    );\n}\n\nexport default Conditions;","import React from \"react\";\nimport \"./style.css\";\n\nexport default function Card(props) {\n    return (\n        <div \n          className=\"containercard\">\n        <h1 className=\"name\">Forecast Dashboard</h1>\n        <div className=\"card\">\n          <div className=\"card-body\"></div>\n          <div className=\"col-lg-9\"></div>\n        </div>   \n        </div>\n    )\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default function Footer() {\n    return (\n        <footer className=\"footer\">\n            <span>Remixing-with_React Forecast Dashboard 2021 © Shannondale Page</span>\n        </footer>\n    );\n}\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar/index\";\nimport Searchbar from \"./components/SearchForm/index\";\nimport SearchResults from \"./components/SearchResults/index\";\nimport Conditions from \"./components/Conditions/index\";\nimport Card from \"./components/Card/index\";\nimport Footer from \"./components/Footer/index\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst BASEURL = \"https://api.openweathermap.org/data/2.5/weather?q=\"\nconst APIKEY = \"&appid=29e4875c9bed2b0310851289abe5a5e1&units=imperial\"\n\nfunction App() {\n  const [response, setResponse] = useState(\"\");\n  const [UVresponse, setUVResponse] = useState(\"\");\n\n  const callWeatherAPI = (query) => {\n    axios.get(BASEURL + query + APIKEY).then(res => {\n        console.log(res);\n        setResponse(res);\n        getUVindex(res.data.coord.lat , res.data.coord.lon);\n    });\n};\n\n  const getUVindex = (lat, lon) => {\n    const UVINDEX = `https://api.openweathermap.org/data/2.5/uvi?appid=29e4875c9bed2b0310851289abe5a5e1&lat=${lat}&lon=${lon}`\n    axios.get(UVINDEX).then(res => {\n      \n      setUVResponse(res);\n    })\n  }\n\nuseEffect(() => {\n  callWeatherAPI(\"Charlotte\");      \n// eslint-disable-next-line react-hooks/exhaustive-deps\n}, []);\n\nuseEffect(() => {\n       \n}, [response]);\n\n// useEffect(() => {\n//   getUVindex(UVresponse.data.coord.lat , UVresponse.data.coord.lon);\n// })\n  return (\n    <div className=\"App\">\n      <Card className=\"card\"/>\n     <Navbar className=\"navbar\"/>\n     <Searchbar callWeatherAPI={callWeatherAPI}/>\n     <SearchResults response={response}/>\n     <h5 className=\"moment\">{moment().format('MMMM Do YYYY, h:mm a')}</h5>\n     <Conditions response={response} UVresponse={UVresponse}/>\n     <br />\n     <br />\n     <br />\n     <br />\n     <Footer />\n    \n     </div> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}